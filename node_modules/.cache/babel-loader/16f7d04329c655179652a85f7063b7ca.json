{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-tab/CurrentTrainingTab.js\";\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport './Current-training-tab.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { exercises } from '../../../Exercises';\nimport { AuthContext } from '../../../auth/AuthContext';\nimport { useHistory } from 'react-router';\nimport CurrentTrainingTimer from '../current-training-timer/Current-training-timer';\n\nconst CurrentTrainingTab = () => {\n  const [startExercise, setStartExercise] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [exercise, setExercise] = useState('');\n  const [loading, setLoading] = useState(false);\n  const interval = useRef(0);\n  const currentExercise = useRef('');\n  const {\n    uid\n  } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleExerciseChange = event => {\n    if (event.target.value !== 0) {\n      setExercise(event.target.value);\n    }\n\n    return;\n  };\n\n  const CloseChooseExercise = () => {\n    setStartExercise(false);\n  };\n\n  const OpenChoosedExercise = () => {\n    setStartExercise(true);\n  };\n\n  useEffect(() => {\n    currentExercise.current = exercises.find(ex => ex.id === exercise);\n\n    if (currentExercise.current) {\n      let duration = currentExercise.current.duration / 100 * 1000;\n\n      if (loading) {\n        interval.current = setInterval(() => {\n          setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 1);\n        }, duration);\n      }\n\n      let data;\n\n      if (progress >= 100) {\n        setLoading(false);\n        clearInterval(interval.current);\n        data = { ...currentExercise.current,\n          id: currentExercise.current.name,\n          duration: currentExercise.current.duration * (progress / 100),\n          calories: currentExercise.current.calories * (progress / 100),\n          date: new Date().toLocaleDateString().split(\".\"),\n          status: \"Completed\",\n          exUserId: uid\n        };\n\n        const sendData = async () => {\n          try {\n            let response = await fetch('https://training-app-d460e.firebaseio.com/exercises.json', {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(data)\n            });\n            response.json();\n          } catch (err) {\n            console.log(err.message);\n          }\n        };\n\n        sendData();\n      }\n\n      return () => clearInterval(interval.current);\n    }\n  }, [loading, progress, exercise, uid]);\n\n  const startTraining = () => {\n    setLoading(true);\n  };\n\n  const cancelTraining = async () => {\n    clearInterval(interval.current);\n    setProgress(0);\n    setLoading(false);\n    history.push({\n      pathname: \"/empty\"\n    });\n    history.goBack();\n    const cancelledExercise = { ...currentExercise.current,\n      exUserId: uid,\n      id: currentExercise.current.name,\n      duration: currentExercise.current.duration * (progress / 100),\n      calories: currentExercise.current.calories * (progress / 100),\n      date: new Date().toLocaleDateString().split(\".\"),\n      status: \"cancelled\"\n    };\n\n    try {\n      let responseData = await fetch('https://training-app-d460e.firebaseio.com/exercises.json', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(cancelledExercise)\n      });\n      responseData.json();\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectEx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: OpenChoosedExercise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Open the select\"), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Exercises\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-controlled-open-select-label\",\n    id: \"demo-controlled-open-select\",\n    open: startExercise,\n    onClose: CloseChooseExercise,\n    onOpen: OpenChoosedExercise,\n    value: exercise,\n    onChange: handleExerciseChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, exercises.map(ex => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: ex.id,\n      value: ex.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, \" \", ex.id, \" \");\n  }))), /*#__PURE__*/React.createElement(CurrentTrainingTimer, {\n    exercise: exercise,\n    loading: loading,\n    progress: progress,\n    cancelTraining: cancelTraining,\n    startTraining: startTraining,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default CurrentTrainingTab;","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-tab/CurrentTrainingTab.js"],"names":["React","useRef","useState","useEffect","useContext","InputLabel","MenuItem","FormControl","Select","Button","exercises","AuthContext","useHistory","CurrentTrainingTimer","CurrentTrainingTab","startExercise","setStartExercise","progress","setProgress","exercise","setExercise","loading","setLoading","interval","currentExercise","uid","history","handleExerciseChange","event","target","value","CloseChooseExercise","OpenChoosedExercise","current","find","ex","id","duration","setInterval","prevProgress","data","clearInterval","name","calories","date","Date","toLocaleDateString","split","status","exUserId","sendData","response","fetch","method","headers","body","JSON","stringify","json","err","console","log","message","startTraining","cancelTraining","push","pathname","goBack","cancelledExercise","responseData","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,SAAjC,EAA4CC,UAA5C,QAA6D,OAA7D;AACA,OAAO,4BAAP;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,oBAAP,MAAiC,kDAAjC;;AAGA,MAAMC,kBAAkB,GAAG,MAAM;AAEhC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMqB,QAAQ,GAAGtB,MAAM,CAAC,CAAD,CAAvB;AACA,QAAMuB,eAAe,GAAGvB,MAAM,CAAC,EAAD,CAA9B;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAUrB,UAAU,CAACO,WAAD,CAA1B;AACA,QAAMe,OAAO,GAAGd,UAAU,EAA1B;;AAEA,QAAMe,oBAAoB,GAAIC,KAAD,IAAW;AACvC,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,CAA3B,EAA8B;AAC7BV,MAAAA,WAAW,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACA;;AACD;AACA,GALD;;AAOA,QAAMC,mBAAmB,GAAG,MAAM;AACjCf,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,GAFD;;AAIA,QAAMgB,mBAAmB,GAAG,MAAM;AACjChB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACfqB,IAAAA,eAAe,CAACS,OAAhB,GAA0BvB,SAAS,CAACwB,IAAV,CAAeC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUjB,QAA/B,CAA1B;;AACA,QAAIK,eAAe,CAACS,OAApB,EAA6B;AAC5B,UAAII,QAAQ,GAAGb,eAAe,CAACS,OAAhB,CAAwBI,QAAxB,GAAmC,GAAnC,GAAyC,IAAxD;;AACA,UAAIhB,OAAJ,EAAa;AACZE,QAAAA,QAAQ,CAACU,OAAT,GAAmBK,WAAW,CAAC,MAAM;AACpCpB,UAAAA,WAAW,CAAEqB,YAAD,IAAmBA,YAAY,IAAI,GAAhB,GAAsB,EAAtB,GAA2BA,YAAY,GAAG,CAA9D,CAAX;AACA,SAF6B,EAE3BF,QAF2B,CAA9B;AAGA;;AACD,UAAIG,IAAJ;;AACA,UAAIvB,QAAQ,IAAI,GAAhB,EAAqB;AACpBK,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAmB,QAAAA,aAAa,CAAClB,QAAQ,CAACU,OAAV,CAAb;AACAO,QAAAA,IAAI,GAAG,EACN,GAAGhB,eAAe,CAACS,OADb;AAENG,UAAAA,EAAE,EAAEZ,eAAe,CAACS,OAAhB,CAAwBS,IAFtB;AAGNL,UAAAA,QAAQ,EAAEb,eAAe,CAACS,OAAhB,CAAwBI,QAAxB,IAAoCpB,QAAQ,GAAG,GAA/C,CAHJ;AAIN0B,UAAAA,QAAQ,EAAEnB,eAAe,CAACS,OAAhB,CAAwBU,QAAxB,IAAoC1B,QAAQ,GAAG,GAA/C,CAJJ;AAKN2B,UAAAA,IAAI,EAAG,IAAIC,IAAJ,EAAD,CACJC,kBADI,GAEJC,KAFI,CAEE,GAFF,CALA;AAQNC,UAAAA,MAAM,EAAE,WARF;AASNC,UAAAA,QAAQ,EAAExB;AATJ,SAAP;;AAWA,cAAMyB,QAAQ,GAAG,YAAY;AAC5B,cAAI;AACH,gBAAIC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0DADyB,EACmC;AAC3DC,cAAAA,MAAM,EAAE,MADmD;AAE3DC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAFkD;AAG3DC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,IAAf;AAHqD,aADnC,CAA1B;AAMAW,YAAAA,QAAQ,CAACO,IAAT;AACA,WARD,CAQE,OAAOC,GAAP,EAAY;AACbC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA;AACD,SAZD;;AAaAZ,QAAAA,QAAQ;AACR;;AACD,aAAO,MAAMT,aAAa,CAAClB,QAAQ,CAACU,OAAV,CAA1B;AACA;AAED,GA1CQ,EA0CN,CAACZ,OAAD,EAAUJ,QAAV,EAAoBE,QAApB,EAA8BM,GAA9B,CA1CM,CAAT;;AA4CA,QAAMsC,aAAa,GAAG,MAAM;AAC3BzC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,GAFD;;AAIA,QAAM0C,cAAc,GAAG,YAAY;AAElCvB,IAAAA,aAAa,CAAClB,QAAQ,CAACU,OAAV,CAAb;AACAf,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,IAAAA,OAAO,CAACuC,IAAR,CAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACAxC,IAAAA,OAAO,CAACyC,MAAR;AAEA,UAAMC,iBAAiB,GAAG,EACzB,GAAG5C,eAAe,CAACS,OADM;AAEzBgB,MAAAA,QAAQ,EAAExB,GAFe;AAGzBW,MAAAA,EAAE,EAAEZ,eAAe,CAACS,OAAhB,CAAwBS,IAHH;AAIzBL,MAAAA,QAAQ,EAAEb,eAAe,CAACS,OAAhB,CAAwBI,QAAxB,IAAoCpB,QAAQ,GAAG,GAA/C,CAJe;AAKzB0B,MAAAA,QAAQ,EAAEnB,eAAe,CAACS,OAAhB,CAAwBU,QAAxB,IAAoC1B,QAAQ,GAAG,GAA/C,CALe;AAMzB2B,MAAAA,IAAI,EAAG,IAAIC,IAAJ,EAAD,CACJC,kBADI,GAEJC,KAFI,CAEE,GAFF,CANmB;AASzBC,MAAAA,MAAM,EAAE;AATiB,KAA1B;;AAYA,QAAI;AACH,UAAIqB,YAAY,GAAG,MAAMjB,KAAK,CAC7B,0DAD6B,EAC+B;AAC3DC,QAAAA,MAAM,EAAE,MADmD;AAE3DC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFkD;AAG3DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,iBAAf;AAHqD,OAD/B,CAA9B;AAOAC,MAAAA,YAAY,CAACX,IAAb;AACA,KATD,CASE,OAAOC,GAAP,EAAY;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA;AACD,GAhCD;;AAkCA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE9B,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADN,eAIM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,mCADV;AAEE,IAAA,EAAE,EAAC,6BAFL;AAGE,IAAA,IAAI,EAAEjB,aAHR;AAIE,IAAA,OAAO,EAAEgB,mBAJX;AAKE,IAAA,MAAM,EAAEC,mBALV;AAME,IAAA,KAAK,EAAEb,QANT;AAOE,IAAA,QAAQ,EAAEQ,oBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGjB,SAAS,CAAC4D,GAAV,CAAcnC,EAAE,IAAI;AACnB,wBAAQ,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,EAAE,CAACC,EAAlB;AAAsB,MAAA,KAAK,EAAED,EAAE,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuCD,EAAE,CAACC,EAA1C,MAAR;AACD,GAFA,CARH,CAFF,CAJN,eAmBM,oBAAC,oBAAD;AACE,IAAA,QAAQ,EAAEjB,QADZ;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,QAAQ,EAAEJ,QAHZ;AAIE,IAAA,cAAc,EAAE+C,cAJlB;AAKE,IAAA,aAAa,EAAED,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBN,CADD;AA6BA,CA1ID;;AA4IA,eAAejD,kBAAf","sourcesContent":["import React, {useRef, useState, useEffect, useContext} from 'react';\nimport './Current-training-tab.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { exercises } from '../../../Exercises';\nimport { AuthContext } from '../../../auth/AuthContext';\nimport { useHistory } from 'react-router';\nimport CurrentTrainingTimer from '../current-training-timer/Current-training-timer';\n\n\nconst CurrentTrainingTab = () => {\n\n\tconst [startExercise, setStartExercise] = useState(false);\n\tconst [progress, setProgress] = useState(0);\n\tconst [exercise, setExercise] = useState('');\n\tconst [loading, setLoading] = useState(false);\n\n\tconst interval = useRef(0);\n\tconst currentExercise = useRef('');\n\tconst { uid } = useContext(AuthContext);\n\tconst history = useHistory();\n\n\tconst handleExerciseChange = (event) => {\n\t\tif (event.target.value !== 0) {\n\t\t\tsetExercise(event.target.value);\n\t\t}\n\t\treturn;\n\t};\n\n\tconst CloseChooseExercise = () => {\n\t\tsetStartExercise(false);\n\t};\n\n\tconst OpenChoosedExercise = () => {\n\t\tsetStartExercise(true);\n\t};\n\n\tuseEffect(() => {\n\t\tcurrentExercise.current = exercises.find(ex => ex.id === exercise);\n\t\tif (currentExercise.current) {\n\t\t\tlet duration = currentExercise.current.duration / 100 * 1000;\n\t\t\tif (loading) {\n\t\t\t\tinterval.current = setInterval(() => {\n\t\t\t\t\tsetProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 1))\n\t\t\t\t}, duration);\n\t\t\t}\n\t\t\tlet data;\n\t\t\tif (progress >= 100) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tclearInterval(interval.current);\n\t\t\t\tdata = {\n\t\t\t\t\t...currentExercise.current,\n\t\t\t\t\tid: currentExercise.current.name,\n\t\t\t\t\tduration: currentExercise.current.duration * (progress / 100),\n\t\t\t\t\tcalories: currentExercise.current.calories * (progress / 100),\n\t\t\t\t\tdate: (new Date())\n\t\t\t\t\t\t.toLocaleDateString()\n\t\t\t\t\t\t.split(\".\"),\n\t\t\t\t\tstatus: \"Completed\",\n\t\t\t\t\texUserId: uid\n\t\t\t\t};\n\t\t\t\tconst sendData = async () => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet response = await fetch(\n\t\t\t\t\t\t\t'https://training-app-d460e.firebaseio.com/exercises.json', {\n\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\t\t\tbody: JSON.stringify(data)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\tresponse.json();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsendData();\n\t\t\t}\n\t\t\treturn () => clearInterval(interval.current)\n\t\t}\n\n\t}, [loading, progress, exercise, uid]);\n\n\tconst startTraining = () => {\n\t\tsetLoading(true);\n\t}\n\n\tconst cancelTraining = async () => {\n\n\t\tclearInterval(interval.current);\n\t\tsetProgress(0);\n\t\tsetLoading(false);\n\t\thistory.push({ pathname: \"/empty\" });\n\t\thistory.goBack();\n\n\t\tconst cancelledExercise = {\n\t\t\t...currentExercise.current,\n\t\t\texUserId: uid,\n\t\t\tid: currentExercise.current.name,\n\t\t\tduration: currentExercise.current.duration * (progress / 100),\n\t\t\tcalories: currentExercise.current.calories * (progress / 100),\n\t\t\tdate: (new Date())\n\t\t\t\t.toLocaleDateString()\n\t\t\t\t.split(\".\"),\n\t\t\tstatus: \"cancelled\",\n\t\t};\n\n\t\ttry {\n\t\t\tlet responseData = await fetch(\n\t\t\t\t'https://training-app-d460e.firebaseio.com/exercises.json', {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify(cancelledExercise)\n\t\t\t\t}\n\t\t\t);\n\t\t\tresponseData.json();\n\t\t} catch (err) {\n\t\t\tconsole.log(err.message);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"selectEx\">\n        <Button onClick={OpenChoosedExercise} >\n          Open the select\n        </Button>\n        <FormControl >\n          <InputLabel >Exercises</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={startExercise}\n            onClose={CloseChooseExercise}\n            onOpen={OpenChoosedExercise}\n            value={exercise}\n            onChange={handleExerciseChange}>    \n            {exercises.map(ex => {\n              return  <MenuItem key={ex.id} value={ex.id} > {ex.id} </MenuItem>\n            })} \n          </Select>\n        </FormControl>\n        <CurrentTrainingTimer\n          exercise={exercise}\n          loading={loading}\n          progress={progress}\n          cancelTraining={cancelTraining}\n          startTraining={startTraining}\n        />\n    </div>\n\t);\n}\n\nexport default CurrentTrainingTab;"]},"metadata":{},"sourceType":"module"}