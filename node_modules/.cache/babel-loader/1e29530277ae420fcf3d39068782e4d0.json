{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/auth/login/Login.js\";\nimport React, { useState, createContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport firebase from '../../firebase/firebase';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport './Login.css';\nconst authContext = createContext({\n  login: Boolean\n});\n\nconst LoginForm = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const history = useHistory();\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(values, 'values');\n    firebase.auth().signInWithEmailAndPassword(values.email, values.password).then(() => {\n      setIsLoggedIn(true);\n      history.push(\"/training-tab\");\n    }).catch(error => {\n      console.log(error.message);\n      alert(error.message);\n    });\n  };\n\n  const onLogOut = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"LoginForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    label: \"E-mail\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"loginButton\",\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }\n  }, \"LOG IN\"))));\n};\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/auth/login/Login.js"],"names":["React","useState","createContext","TextField","Button","Container","withRouter","useHistory","firebase","authContext","login","Boolean","LoginForm","values","setValues","email","password","isLoggedIn","setIsLoggedIn","history","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","console","log","auth","signInWithEmailAndPassword","then","push","catch","error","message","alert","onLogOut"],"mappings":"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","sourcesContent":["import React, { useState, createContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport firebase from '../../firebase/firebase'\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport './Login.css';\n\nconst authContext = createContext({\n    login: Boolean,\n    \n})\n\n\nconst LoginForm = () => {\n\n    const [values, setValues] = useState({\n       email: \"\",\n       password: \"\"\n     });\n     const [isLoggedIn, setIsLoggedIn] = useState(false)\n  \n    const history = useHistory();\n\n    const handleChange = (event) => {\n       event.persist();\n       setValues(values => ({\n         ...values,\n         [event.target.name]: event.target.value\n     }));\n    }    \n    \n    const handleSubmit = (event) => {\n       event.preventDefault();\n       console.log(values, 'values');\n       firebase\n       .auth()\n       .signInWithEmailAndPassword(values.email, values.password)\n       .then(() => {\n               setIsLoggedIn(true);\n               history.push(\"/training-tab\");\n          })\n              .catch(error => {\n                  console.log(error.message);\n                  alert(error.message);\n          });\n   } \n\n   const onLogOut = () => {\n       setIsLoggedIn(false);\n   }\n\n    return(\n        <div>\n        <Container>\n        <form  className=\"LoginForm\" onSubmit={handleSubmit} >\n            <h1>Login</h1>\n\n            <TextField \n             id=\"input\"\n            label=\"E-mail\"\n            type=\"email\"\n            name=\"email\"\n            required\n            onChange={handleChange} />\n            <TextField\n             id=\"input\"\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            required\n            onChange={handleChange} />\n         \n           <Button\n            className=\"loginButton\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\" >\n                 LOG IN\n            </Button>\n           \n        </form>\n       \n        </Container>\n        </div>\n    )\n\n}\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}