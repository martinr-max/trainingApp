{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/navigation/drawer/Drawer.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NavLinks from '../navLinks/NavLinks';\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\nexport default function PersistentDrawerLeft() {\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const classes = useStyles();\n\n  const list = anchor => /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 50\n    }\n  }) : /*#__PURE__*/React.createElement(MailIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 66\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, index % 2 === 0 ? /*#__PURE__*/React.createElement(InboxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 50\n    }\n  }) : /*#__PURE__*/React.createElement(MailIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 66\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, ['left'].map(anchor => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: anchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer(anchor, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, anchor), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: anchor,\n    open: state[anchor],\n    onClose: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, list(anchor)))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/navigation/drawer/Drawer.js"],"names":["React","useState","clsx","makeStyles","Drawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","NavLinks","useStyles","list","width","fullList","PersistentDrawerLeft","state","setState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","classes","map","text","index"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NavLinks from '../navLinks/NavLinks';\n\n\nconst useStyles = makeStyles({\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n  });\n\nexport default function PersistentDrawerLeft() {\n\n    const [state, setState] = useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n      });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n      };\n\n  const classes = useStyles();\n\n  const list = (anchor) => (\n        <div\n          className={clsx(classes.list, {\n            [classes.fullList]: anchor === 'top'\n          })}\n          role=\"presentation\"\n          onClick={toggleDrawer(anchor, false)}\n          onKeyDown={toggleDrawer(anchor, false)}\n        >\n          <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      );\n    \n      return (\n        <div>\n          {['left'].map((anchor) => (\n            <React.Fragment key={anchor}>\n              <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n              <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                {list(anchor)}\n              </Drawer>\n            </React.Fragment>\n          ))}\n        </div>\n      );\n  \n    }"]},"metadata":{},"sourceType":"module"}