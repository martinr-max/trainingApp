{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/auth/login/Login.js\";\nimport React, { useState, useContext, useCallback } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport firebase from '../../firebase/firebase';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport './Login.css';\nimport { AuthContext } from '../AuthContext';\n\nconst LoginForm = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const history = useHistory();\n  const authContext = useContext(AuthContext);\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmit = useCallback(event => {\n    event.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(values.email, values.password).then(response => {\n      authContext.setUser(response);\n      console.log(response.user.providerData['uid']);\n      history.push(\"/training-tab\");\n    }).catch(error => {\n      console.log(error.message);\n      alert(error.message);\n    });\n  }, [authContext, history, values.email, values.password]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"LoginForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    label: \"E-mail\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"input\",\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"loginButton\",\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"LOG IN\"))));\n};\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/auth/login/Login.js"],"names":["React","useState","useContext","useCallback","TextField","Button","Container","withRouter","useHistory","firebase","AuthContext","LoginForm","values","setValues","email","password","history","authContext","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","auth","signInWithEmailAndPassword","then","response","setUser","console","log","user","providerData","push","catch","error","message","alert"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useCallback } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport firebase from '../../firebase/firebase'\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport './Login.css';\nimport { AuthContext } from '../AuthContext';\n\nconst LoginForm = () => {\n\n    const [values, setValues] = useState({\n       email: \"\",\n       password: \"\"\n     });\n  \n    const history = useHistory();\n    const authContext = useContext(AuthContext)\n\n\n    const handleChange = (event) => {\n       event.persist();\n       setValues(values => ({\n         ...values,\n         [event.target.name]: event.target.value\n     }));\n    }    \n    \n    const handleSubmit = useCallback((event) => {\n       event.preventDefault();\n       firebase\n       .auth()\n       .signInWithEmailAndPassword(values.email, values.password)\n       .then((response) => {\n               authContext.setUser(response)\n               console.log(response.user.providerData['uid'])\n               history.push(\"/training-tab\");\n          })\n        .catch(error => {\n            console.log(error.message);\n            alert(error.message);\n        });\n   }, [authContext, history, values.email, values.password]);\n\n  return(\n       <React.Fragment>\n        <Container>\n          <form  className=\"LoginForm\" onSubmit={handleSubmit} >\n            <h1>Login</h1>\n            <TextField \n             id=\"input\"\n             label=\"E-mail\"\n             type=\"email\"\n             name=\"email\"\n             required\n             onChange={handleChange} />\n            <TextField\n             id=\"input\"\n             label=\"Password\"\n             type=\"password\"\n             name=\"password\"\n             required\n             onChange={handleChange} />\n            <Button\n             className=\"loginButton\"\n             color=\"primary\"\n             variant=\"contained\"\n             type=\"submit\" >\n              LOG IN\n            </Button> \n        </form>    \n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}