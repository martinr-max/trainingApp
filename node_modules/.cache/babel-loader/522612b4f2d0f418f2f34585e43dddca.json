{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-tab/CurrentTrainingTab.js\";\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport './Current-training-tab.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { exercises } from '../../../Exercises';\nimport CurrentTraining from '../current-training-timer/Current-training-timer';\nimport { AuthContext } from '../../../auth/AuthContext';\nimport { useHistory } from 'react-router';\n\nconst CurrentTrainingTab = () => {\n  const [startExercise, setStartExercise] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [exercise, setExercise] = useState('');\n  const [loading, setLoading] = useState(false);\n  const interval = useRef(0);\n  const currentExercise = useRef('');\n  const {\n    uid\n  } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleExerciseChange = event => {\n    if (event.target.value !== 0) {\n      setExercise(event.target.value);\n    }\n\n    return;\n  };\n\n  const CloseChooseExercise = () => {\n    setStartExercise(false);\n  };\n\n  const OpenChoosedExercise = () => {\n    setStartExercise(true);\n  };\n\n  useEffect(() => {\n    currentExercise.current = exercises.find(ex => ex.id === exercise);\n\n    if (currentExercise.current) {\n      let duration = currentExercise.current.duration / 100 * 1000;\n\n      if (loading) {\n        interval.current = setInterval(() => {\n          setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 1);\n        }, duration);\n      }\n\n      let data;\n\n      if (progress >= 100) {\n        setLoading(false);\n        clearInterval(interval.current);\n        data = { ...currentExercise.current,\n          id: currentExercise.current.name,\n          duration: currentExercise.current.duration * (progress / 100),\n          calories: currentExercise.current.calories * (progress / 100),\n          date: new Date().toLocaleDateString().split(\".\"),\n          status: \"Completed\",\n          exUserId: uid\n        };\n\n        const sendData = async () => {\n          try {\n            let response = await fetch('https://training-app-d460e.firebaseio.com/exercises.json', {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(data)\n            });\n            response.json();\n          } catch (err) {}\n        };\n\n        sendData();\n      }\n\n      return () => clearInterval(interval.current);\n    }\n  }, [loading, progress, exercise, uid]);\n\n  const startTraining = () => {\n    setLoading(true);\n  };\n\n  const cancelTraining = async () => {\n    clearInterval(interval.current);\n    setProgress(0);\n    setLoading(false);\n    history.push({\n      pathname: \"/empty\"\n    });\n    history.replace({\n      pathname: \"/training-route\"\n    });\n    const data = { ...currentExercise.current,\n      exUserId: uid,\n      id: currentExercise.current.name,\n      duration: currentExercise.current.duration * (progress / 100),\n      calories: currentExercise.current.calories * (progress / 100),\n      date: new Date().toLocaleDateString().split(\".\"),\n      status: \"cancelled\"\n    };\n\n    try {\n      let responseData = await fetch('https://training-app-d460e.firebaseio.com/exercises.json', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      responseData.json();\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectEx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: OpenChoosedExercise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Open the select\"), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Exercises\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-controlled-open-select-label\",\n    id: \"demo-controlled-open-select\",\n    open: startExercise,\n    onClose: CloseChooseExercise,\n    onOpen: OpenChoosedExercise,\n    value: exercise,\n    onChange: handleExerciseChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, exercises.map(ex => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: ex.id,\n      value: ex.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }, \" \", ex.id, \" \");\n  }))), /*#__PURE__*/React.createElement(CurrentTraining, {\n    exercise: exercise,\n    loading: loading,\n    progress: progress,\n    cancelTraining: cancelTraining,\n    startTraining: startTraining,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 8\n    }\n  }));\n};\n\nexport default CurrentTrainingTab;","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-tab/CurrentTrainingTab.js"],"names":["React","useRef","useState","useEffect","useContext","InputLabel","MenuItem","FormControl","Select","Button","exercises","CurrentTraining","AuthContext","useHistory","CurrentTrainingTab","startExercise","setStartExercise","progress","setProgress","exercise","setExercise","loading","setLoading","interval","currentExercise","uid","history","handleExerciseChange","event","target","value","CloseChooseExercise","OpenChoosedExercise","current","find","ex","id","duration","setInterval","prevProgress","data","clearInterval","name","calories","date","Date","toLocaleDateString","split","status","exUserId","sendData","response","fetch","method","headers","body","JSON","stringify","json","err","startTraining","cancelTraining","push","pathname","replace","responseData","console","log","message","map"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect, useContext} from 'react';\nimport './Current-training-tab.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { exercises } from '../../../Exercises';\nimport CurrentTraining from '../current-training-timer/Current-training-timer';\nimport { AuthContext } from '../../../auth/AuthContext';\nimport { useHistory } from 'react-router';\n\n\nconst CurrentTrainingTab = () => {\n\n  const [startExercise, setStartExercise] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [exercise, setExercise] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const interval = useRef(0);\n  const currentExercise = useRef('');\n  const { uid } = useContext(AuthContext);\n  const history = useHistory();\n\n\n  const handleExerciseChange = (event) => {\n    if(event.target.value !== 0) {\n      setExercise(event.target.value);\n    }\n    return;\n  };\n  \n  const CloseChooseExercise = () => {\n    setStartExercise(false);\n  };\n\n  const OpenChoosedExercise = () => {\n    setStartExercise(true);\n  };\n\n  useEffect(() => {\n    currentExercise.current = exercises.find( ex => ex.id === exercise);\n    \n    if(currentExercise.current){\n\n      let duration = currentExercise.current.duration / 100 * 1000;\n      \n      if(loading) {\n          interval.current = setInterval(()=> {\n            setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 1))\n          }, duration);\n      }\n\n      let data;\n      if (progress >= 100) {\n          setLoading(false);\n          clearInterval(interval.current);\n            data = {\n            ...currentExercise.current,\n            id: currentExercise.current.name, \n            duration: currentExercise.current.duration * (progress / 100),\n            calories: currentExercise.current.calories * (progress / 100),\n            date: ( new Date() ).toLocaleDateString().split(\".\"),\n            status: \"Completed\",\n            exUserId: uid\n          };\n          const sendData = async () => {\n            try {\n              let response = await fetch(\n                'https://training-app-d460e.firebaseio.com/exercises.json', {\n                method: \"POST\",\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(data)\n                })\n              response.json()\n            }\n            catch(err) {}\n        \n        }\n        sendData();  \n      }  \n      \n      return () => clearInterval(interval.current) }\n    }, [loading, progress, exercise, uid ]);\n\n\n    const startTraining = () => {\n        setLoading(true);\n    }\n\n    const cancelTraining = async () => {\n\n      clearInterval(interval.current);\n      setProgress(0);\n      setLoading(false);\n      history.push({ pathname: \"/empty\" });\n      history.replace({ pathname: \"/training-route\" });\n      \n      \n      const data = {\n        ...currentExercise.current,\n        exUserId: uid,\n        id: currentExercise.current.name, \n        duration: currentExercise.current.duration * (progress / 100),\n        calories: currentExercise.current.calories * (progress / 100),\n        date: ( new Date() ).toLocaleDateString().split(\".\"),\n        status: \"cancelled\",\n      };\n\n      try {\n        let responseData =  await fetch(\n          'https://training-app-d460e.firebaseio.com/exercises.json', {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(data)\n            }\n          );\n                              \n        responseData.json();\n      }\n      catch(err) {\n        console.log(err.message);\n      }      \n    }\n\n\n\n    \n    return(\n        <div className=\"selectEx\">\n        <Button onClick={OpenChoosedExercise} >\n          Open the select\n        </Button>\n        <FormControl >\n          <InputLabel >Exercises</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={startExercise}\n            onClose={CloseChooseExercise}\n            onOpen={OpenChoosedExercise}\n            value={exercise}\n            onChange={handleExerciseChange}>    \n          {exercises.map(ex => {\n              return  <MenuItem key={ex.id} value={ex.id} > {ex.id} </MenuItem>\n          })} \n          </Select>\n        </FormControl>\n       <CurrentTraining\n        exercise={exercise}\n        loading={loading}\n        progress={progress}\n        cancelTraining={cancelTraining}\n        startTraining={startTraining}\n         />\n      </div>\n    ) \n}\n\nexport default CurrentTrainingTab;"]},"metadata":{},"sourceType":"module"}