{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/past-training-table/Past-training-table.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { AuthContext } from '../../auth/AuthContext';\n\nconst PastTrainingTable = () => {\n  const [finishedExercises, setFinishedExercises] = useState();\n  const {\n    uid\n  } = useContext(AuthContext);\n  useEffect(() => {\n    fetch('https://training-app-d460e.firebaseio.com/exercises.json').then(result => result.json()).then(responseData => {\n      console.log(responseData);\n      const dataArray = [];\n\n      for (const key in responseData) {\n        dataArray.push({\n          id: key,\n          exUserId: responseData[key].ExUserId,\n          name: responseData[key].name,\n          duration: responseData[key].duration,\n          calories: responseData[key].calories,\n          status: responseData[key].status,\n          date: responseData[key].date\n        });\n      }\n\n      setFinishedExercises(dataArray);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Exercise\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Duration \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Date \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \" Calories \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \" Status\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, finishedExercises && finishedExercises.map(row => uid !== row.ExUserId ? /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, row.duration), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, row.date), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, row.status)) : 'tere'))));\n};\n\nexport default PastTrainingTable;","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/past-training-table/Past-training-table.js"],"names":["React","useEffect","useState","useContext","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","AuthContext","PastTrainingTable","finishedExercises","setFinishedExercises","uid","fetch","then","result","json","responseData","console","log","dataArray","key","push","id","exUserId","ExUserId","name","duration","calories","status","date","catch","err","map","row"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { AuthContext } from '../../auth/AuthContext';\n\n\n\n\nconst PastTrainingTable = () => {\n\n  const [finishedExercises, setFinishedExercises] = useState();\n  const {uid} = useContext(AuthContext);\n\n  useEffect(() => {\n    fetch('https://training-app-d460e.firebaseio.com/exercises.json')\n    .then(result => result.json())\n    .then(responseData => {\n      console.log(responseData)\n      const dataArray = []\n      for(const key in responseData) {\n        dataArray.push({\n          id: key,\n          exUserId: responseData[key].ExUserId,\n          name: responseData[key].name,\n          duration: responseData[key].duration,\n          calories: responseData[key].calories,\n          status: responseData[key].status,\n          date: responseData[key].date\n        })\n      }\n      setFinishedExercises(dataArray)\n    })\n  \n    .catch(err => console.log(err))\n      }, [])\n\n    return (\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Exercise</TableCell>\n                <TableCell align=\"right\">Duration </TableCell>\n                <TableCell align=\"right\">Date </TableCell>\n                <TableCell align=\"right\"> Calories </TableCell>\n                <TableCell align=\"right\"> Status</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              { finishedExercises && finishedExercises.map((row) => (\n                uid !== row.ExUserId  ?\n\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.duration}</TableCell>\n                  <TableCell align=\"right\">{row.date}</TableCell>\n                  <TableCell align=\"right\">{row.calories}</TableCell>\n                  <TableCell align=\"right\">{row.status}</TableCell>\n                </TableRow> : 'tere'\n                \n              )) }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      );\n\n}\n\nexport default PastTrainingTable;"]},"metadata":{},"sourceType":"module"}