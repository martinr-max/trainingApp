{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-timer/Current-training-timer.js\";\nimport React from 'react';\nimport './Current-training-timer.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { exercises } from '../../../Exercises';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nconst CurrentTraining = () => {\n  const [progress, setProgress] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  const CircularProgressWithLabel = props => {\n    return /*#__PURE__*/React.createElement(Box, {\n      position: \"relative\",\n      display: \"inline-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, Object.assign({\n      variant: \"static\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"div\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, `${Math.round(props.value)}%`)));\n  };\n\n  React.useEffect(() => {\n    const duration = exercises.map(d => {\n      return d.duration / 100 * 10;\n    });\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 1 : prevProgress + 1);\n\n      if (progress >= 100) {\n        setLoading(false);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [progress]);\n\n  const startTraining = () => {\n    setLoading(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgressWithLabel, {\n    size: \"12rem\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: startTraining,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }\n  }, \"start\"));\n};\n\nexport default CurrentTraining;","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-timer/Current-training-timer.js"],"names":["React","CircularProgress","exercises","Typography","Box","Button","CurrentTraining","progress","setProgress","useState","loading","setLoading","CircularProgressWithLabel","props","Math","round","value","useEffect","duration","map","d","timer","setInterval","prevProgress","clearInterval","startTraining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAE1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,KAAK,CAACS,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9B;;AAEA,QAAMG,yBAAyB,GAAIC,KAAD,IAAW;AACzC,wBACE,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAC;AAA1B,OAAuCA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAEE,oBAAC,GAAD;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,MAAM,EAAE,CAHV;AAIE,MAAA,KAAK,EAAE,CAJT;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,OAAO,EAAC,MANV;AAOE,MAAA,UAAU,EAAC,QAPb;AAQE,MAAA,cAAc,EAAC,QARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,SAAS,EAAC,KAAxC;AAA8C,MAAA,KAAK,EAAC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsE,GAAEC,IAAI,CAACC,KAAL,CACtEF,KAAK,CAACG,KADgE,CAEtE,GAFF,CAVF,CAFF,CADF;AAmBD,GApBH;;AAsBAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB,UAAMC,QAAQ,GAAGhB,SAAS,CAACiB,GAAV,CAAcC,CAAC,IAAI;AAChC,aAAOA,CAAC,CAACF,QAAF,GAAa,GAAb,GAAmB,EAA1B;AACH,KAFgB,CAAjB;AAGA,UAAMG,KAAK,GAAGC,WAAW,CAAC,MAAK;AAC3Bd,MAAAA,WAAW,CAAEe,YAAD,IAAmBA,YAAY,IAAI,GAAhB,GAAsB,CAAtB,GAA0BA,YAAY,GAAG,CAA7D,CAAX;;AACA,UAAGhB,QAAQ,IAAI,GAAf,EAAoB;AAChBI,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KALwB,EAKtB,IALsB,CAAzB;AAMA,WAAO,MAAM;AAACa,MAAAA,aAAa,CAACH,KAAD,CAAb;AAAqB,KAAnC;AACD,GAXH,EAWK,CAACd,QAAD,CAXL;;AAaE,QAAMkB,aAAa,GAAG,MAAM;AACxBd,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAKF,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACAD,OAAO,iBAAI,oBAAC,yBAAD;AAA2B,IAAA,IAAI,EAAC,OAAhC;AAAwC,IAAA,KAAK,EAAEH,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,CADJ,eAIG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEkB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJH,CADJ;AAWH,CAxDD;;AA0DA,eAAenB,eAAf","sourcesContent":["import React from 'react';\nimport './Current-training-timer.css'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {exercises} from '../../../Exercises';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\n\nconst CurrentTraining = () => {\n\n    const [progress, setProgress] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n\n    const CircularProgressWithLabel = (props) => {\n        return (\n          <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"static\" {...props} />\n            <Box\n              top={0}\n              left={0}\n              bottom={0}\n              right={0}\n              position=\"absolute\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                props.value,\n              )}%`}</Typography>\n            </Box>\n          </Box>\n        );\n      }\n\n    React.useEffect(() => {\n        const duration = exercises.map(d => {\n            return d.duration / 100 * 10\n        })\n        const timer = setInterval(()=> {\n            setProgress((prevProgress) => (prevProgress >= 100 ? 1 : prevProgress + 1))\n            if(progress >= 100) {\n                setLoading(false)\n            }\n        }, 1000)\n        return () => {clearInterval(timer)}   \n      }, [progress]);\n\n      const startTraining = () => {\n          setLoading(true)\n      }\n    \n\n    return(\n        <div className=\"timer\">\n            <div>\n           {loading && <CircularProgressWithLabel size=\"12rem\" value={progress} />}\n           </div>\n           <Button onClick={startTraining}>start</Button>\n        </div>\n\n\n    )\n\n}\n\nexport default CurrentTraining;\n"]},"metadata":{},"sourceType":"module"}