{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/current-training/Current-training.js\";\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CurrentTraining = () => {\n  const [progress, setProgress] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  React.useEffect(() => {\n    if (!loading) {\n      const interval = setInterval(() => {\n        setProgress(progress => progress + 1);\n      }, 1000);\n\n      if (progress > 10) {\n        return () => clearInterval(interval);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, loading && progress);\n};\n\nexport default CurrentTraining;","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/current-training/Current-training.js"],"names":["React","CircularProgress","CurrentTraining","progress","setProgress","useState","loading","setLoading","useEffect","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAE1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9B;AAEAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AAClB,QAAG,CAACF,OAAJ,EAAY;AACR,YAAMG,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BN,QAAAA,WAAW,CAACD,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAX;AACH,OAF2B,EAEzB,IAFyB,CAA5B;;AAGA,UAAGA,QAAQ,GAAG,EAAd,EAAkB;AACd,eAAO,MAAMQ,aAAa,CAACF,QAAD,CAA1B;AAEH;AAEJ;AAGF,GAbH,EAaK,EAbL;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,OAAO,IAAIH,QADf,CADJ;AAQH,CA7BD;;AA+BA,eAAeD,eAAf","sourcesContent":["import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CurrentTraining = () => {\n\n    const [progress, setProgress] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n\n    React.useEffect(() => {\n        if(!loading){\n            const interval = setInterval(() => {\n                setProgress(progress => progress + 1)\n            }, 1000);\n            if(progress > 10) {\n                return () => clearInterval(interval);\n    \n            }\n\n        }\n        \n       \n      }, []);\n    \n\n    return(\n        <div>\n           {loading && progress}\n        </div>\n\n\n    )\n\n}\n\nexport default CurrentTraining;\n"]},"metadata":{},"sourceType":"module"}