{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/Training-tab/TrainingTab.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport CurrentTraining from '../current-training/current-training-timer/Current-training-timer';\nimport PastTrainingTable from '../past-training-table/Past-training-table';\nimport { exercises } from '../../Exercises';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, children)));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500\n  }\n}));\nexport default function TrainingTab() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const interval = useRef(0);\n  const finishedExercises = useRef([]);\n  const currentExercise = useRef('');\n  const [value, setValue] = React.useState(0);\n  const [progress, setProgress] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  React.useEffect(() => {\n    currentExercise.current = exercises.find(ex => ex.id === exercise);\n\n    if (currentExercise.current) {\n      let duration = currentExercise.current.duration / 100 * 1000;\n\n      if (loading) {\n        interval.current = setInterval(() => {\n          setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 1);\n        }, duration);\n\n        if (progress >= 100) {\n          setLoading(false);\n          clearInterval(interval.current);\n        }\n      }\n\n      return () => clearInterval(interval.current);\n    }\n  }, [loading, progress, exercise]);\n\n  const startTraining = () => {\n    setLoading(true);\n  };\n\n  const cancelTraining = () => {\n    clearInterval(interval.current);\n    setProgress(0);\n    setLoading(false);\n    finishedExercises.current.push({ ...currentExercise.current,\n      duration: currentExercise.current.duration * (progress / 100),\n      calories: currentExercise.current.calories * (progress / 100),\n      date: new Date(),\n      status: \"cancelled\"\n    });\n    console.log(finishedExercises.current);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Current Training\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Past Training\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(SwipeableViews, {\n    axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n    index: value,\n    onChangeIndex: handleChangeIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    dir: theme.direction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CurrentTrainingTab, {\n    loading: loading,\n    progress: progress,\n    cancelTraining: cancelTraining,\n    startTraining: startTraining,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    dir: theme.direction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PastTrainingTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/Training-tab/TrainingTab.js"],"names":["React","PropTypes","SwipeableViews","makeStyles","useTheme","AppBar","Tabs","Tab","Typography","Box","CurrentTraining","PastTrainingTable","exercises","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","backgroundColor","palette","background","paper","width","TrainingTab","classes","interval","useRef","finishedExercises","currentExercise","setValue","useState","progress","setProgress","loading","setLoading","handleChange","event","newValue","handleChangeIndex","useEffect","current","find","ex","exercise","duration","setInterval","prevProgress","clearInterval","startTraining","cancelTraining","push","calories","date","Date","status","console","log","direction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport CurrentTraining from '../current-training/current-training-timer/Current-training-timer';\nimport PastTrainingTable from '../past-training-table/Past-training-table';\nimport {exercises} from '../../Exercises';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n  },\n}));\n\nexport default function TrainingTab() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const interval = useRef(0);\n  const finishedExercises = useRef([])\n  const currentExercise = useRef('')\n\n  const [value, setValue] = React.useState(0);\n  const [progress, setProgress] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  React.useEffect(() => {\n    currentExercise.current = exercises.find( ex => ex.id === exercise)\n    if(currentExercise.current){\n      let duration = currentExercise.current.duration / 100 * 1000;\n    \n        \n      if(loading) {\n          interval.current = setInterval(()=> {\n          setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 1))\n          \n      }, duration) \n      if (progress >= 100) {\n          setLoading(false)\n          clearInterval(interval.current);\n        }\n      }  \n      return () => clearInterval(interval.current) }\n    }, [loading, progress, exercise ]);\n\n\n    const startTraining = () => {\n        setLoading(true)\n    }\n\n    const cancelTraining = () => {\n      clearInterval(interval.current);\n      setProgress(0)\n      setLoading(false);\n      \n      finishedExercises.current.push({\n        ...currentExercise.current,\n        duration: currentExercise.current.duration * (progress / 100),\n        calories: currentExercise.current.calories * (progress / 100),\n        date: new Date(),\n        status: \"cancelled\"\n      });\n      console.log(finishedExercises.current)\n    }\n\n  \n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Current Training\" {...a11yProps(0)} />\n          <Tab label=\"Past Training\" {...a11yProps(1)} />\n         \n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n            <CurrentTrainingTab\n             loading={loading}\n             progress={progress}\n             cancelTraining={cancelTraining}\n             startTraining={startTraining}\n              />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <PastTrainingTable />\n        </TabPanel>\n       \n      </SwipeableViews>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}