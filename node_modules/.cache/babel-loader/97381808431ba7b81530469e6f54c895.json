{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-timer/Current-training-timer.js\";\nimport React, { useRef } from 'react';\nimport './Current-training-timer.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { exercises } from '../../../Exercises';\nimport CancelModal from '../../../cancelModel/CancelModel';\nimport PastTrainingTable from '../../past-training-table/Past-training-table';\n\nconst CurrentTraining = ({\n  exercise\n}) => {\n  const [progress, setProgress] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const [openCancelModal, setOpenCancelModal] = React.useState(false);\n\n  const handleOpenCancelModal = () => {\n    setOpenCancelModal(true);\n  };\n\n  const handleCloseCancelModal = () => {\n    setOpenCancelModal(false);\n  };\n\n  const interval = useRef(0);\n  const finishedExercises = useRef([]);\n  const currentExercise = useRef('');\n\n  const CircularProgressWithLabel = props => {\n    return /*#__PURE__*/React.createElement(Box, {\n      position: \"relative\",\n      display: \"inline-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, Object.assign({\n      variant: \"static\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"div\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, `${Math.round(props.value)}%`)));\n  };\n\n  React.useEffect(() => {\n    currentExercise.current = exercises.find(ex => ex.id === exercise);\n\n    if (currentExercise.current) {\n      let duration = currentExercise.current.duration / 100 * 1000;\n\n      if (loading) {\n        interval.current = setInterval(() => {\n          setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 1);\n        }, duration);\n\n        if (progress >= 100) {\n          setLoading(false);\n          clearInterval(interval.current);\n        }\n      }\n\n      return () => clearInterval(interval.current);\n    }\n  }, [loading, progress, exercise]);\n\n  const startTraining = () => {\n    setLoading(true);\n  };\n\n  const cancelTraining = () => {\n    clearInterval(interval.current);\n    setProgress(0);\n    setLoading(false);\n    finishedExercises.current.push({ ...currentExercise.current,\n      duration: currentExercise.current.duration * (progress / 100),\n      calories: currentExercise.current.calories * (progress / 100),\n      date: new Date(),\n      status: \"cancelled\"\n    });\n    console.log(finishedExercises.current);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, loading && /*#__PURE__*/React.createElement(CancelModal, {\n    open: openCancelModal,\n    cancelTraining: cancelTraining,\n    handleClose: handleCloseCancelModal,\n    handleOpen: handleOpenCancelModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgressWithLabel, {\n    size: \"12rem\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }\n  })), !loading ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disabled: exercise.length === 0,\n    color: \"primary\",\n    onClick: startTraining,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }, \"Start\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpenCancelModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(PastTrainingTable, {\n    finishedExercises: finishedExercises.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CurrentTraining;","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-timer/Current-training-timer.js"],"names":["React","useRef","CircularProgress","Typography","Box","Button","exercises","CancelModal","PastTrainingTable","CurrentTraining","exercise","progress","setProgress","useState","loading","setLoading","openCancelModal","setOpenCancelModal","handleOpenCancelModal","handleCloseCancelModal","interval","finishedExercises","currentExercise","CircularProgressWithLabel","props","Math","round","value","useEffect","current","find","ex","id","duration","setInterval","prevProgress","clearInterval","startTraining","cancelTraining","push","calories","date","Date","status","console","log","length"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport './Current-training-timer.css'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { exercises } from '../../../Exercises';\nimport CancelModal from '../../../cancelModel/CancelModel';\nimport PastTrainingTable from '../../past-training-table/Past-training-table';\n\n\nconst CurrentTraining = ({exercise}) => {\n\n    const [progress, setProgress] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [openCancelModal, setOpenCancelModal] = React.useState(false);\n\n    const handleOpenCancelModal = () => {\n      setOpenCancelModal(true);\n    };\n\n  const handleCloseCancelModal = () => {\n\n    setOpenCancelModal(false)\n  };\n\n    const interval = useRef(0);\n    const finishedExercises = useRef([])\n    const currentExercise = useRef('')\n\n    const CircularProgressWithLabel = (props) => {\n        return (\n          <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"static\" {...props} />\n            <Box\n              top={0}\n              left={0}\n              bottom={0}\n              right={0}\n              position=\"absolute\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                props.value,\n              )}%`}</Typography>\n            </Box>\n          </Box>\n        );\n      }\n    React.useEffect(() => {\n      currentExercise.current = exercises.find( ex => ex.id === exercise)\n      if(currentExercise.current){\n        let duration = currentExercise.current.duration / 100 * 1000;\n      \n          \n        if(loading) {\n            interval.current = setInterval(()=> {\n            setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 1))\n            \n        }, duration) \n        if (progress >= 100) {\n            setLoading(false)\n            clearInterval(interval.current);\n          }\n        }  \n        return () => clearInterval(interval.current) }\n      }, [loading, progress, exercise ]);\n\n\n      const startTraining = () => {\n          setLoading(true)\n      }\n\n      const cancelTraining = () => {\n        clearInterval(interval.current);\n        setProgress(0)\n        setLoading(false);\n        \n        finishedExercises.current.push({\n          ...currentExercise.current,\n          duration: currentExercise.current.duration * (progress / 100),\n          calories: currentExercise.current.calories * (progress / 100),\n          date: new Date(),\n          status: \"cancelled\"\n        });\n        console.log(finishedExercises.current)\n      }\n\n    \n\n    return(\n      <React.Fragment>\n        { loading &&  <CancelModal\n           open={openCancelModal}\n           cancelTraining={cancelTraining}\n           handleClose={handleCloseCancelModal}\n           handleOpen={handleOpenCancelModal}\n        /> }\n        <div className=\"timer\">\n            <div>\n           {loading && <CircularProgressWithLabel  size=\"12rem\" value={progress} />}\n           </div>\n           {!loading ?<Button  variant=\"contained\" disabled={exercise.length === 0}color=\"primary\" onClick={startTraining}> \n            Start\n           </Button>:  <Button variant=\"contained\" color=\"primary\" onClick={handleOpenCancelModal}> \n            Cancel\n    </Button> }\n         \n        </div>\n\n            <PastTrainingTable finishedExercises={finishedExercises.current} />\n      </React.Fragment>\n        \n\n    )\n\n}\n\nexport default CurrentTraining;\n"]},"metadata":{},"sourceType":"module"}