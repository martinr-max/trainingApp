{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/current-training/Current-training.js\";\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CurrentTraining = () => {\n  const [progress, setProgress] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress + 10);\n\n      if (progress === 10) {\n        setLoading(false);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [progress]);\n\n  const start = () => {\n    setLoading(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"static\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }\n  }, \"start\"));\n};\n\nexport default CurrentTraining;","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/current-training/Current-training.js"],"names":["React","CircularProgress","CurrentTraining","progress","setProgress","useState","loading","setLoading","useEffect","timer","setInterval","prevProgress","clearInterval","start"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAE1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9B;AAEAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AAElB,UAAMC,KAAK,GAAGC,WAAW,CAAC,MAAK;AAC3BN,MAAAA,WAAW,CAAEO,YAAD,IAAmBA,YAAY,GAAG,EAAnC,CAAX;;AACA,UAAGR,QAAQ,KAAK,EAAhB,EAAoB;AAChBI,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAEJ,KANwB,EAMtB,IANsB,CAAzB;AAOA,WAAO,MAAM;AAACK,MAAAA,aAAa,CAACH,KAAD,CAAb;AAAqB,KAAnC;AAMD,GAfH,EAeK,CAACN,QAAD,CAfL;;AAiBE,QAAMU,KAAK,GAAG,MAAM;AAChBN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAKF,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,OAAO,iBAAI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,QAA1B;AAAmC,IAAA,KAAK,EAAEH,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,eAEG;AAAQ,IAAA,OAAO,EAAEU,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFH,CADJ;AASH,CApCD;;AAsCA,eAAeX,eAAf","sourcesContent":["import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CurrentTraining = () => {\n\n    const [progress, setProgress] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n\n    React.useEffect(() => {\n       \n        const timer = setInterval(()=> {\n            setProgress((prevProgress) => (prevProgress + 10))\n            if(progress === 10) {\n                setLoading(false)\n            }\n\n        }, 1000)\n        return () => {clearInterval(timer)}\n            \n\n        \n        \n       \n      }, [progress]);\n\n      const start = () => {\n          setLoading(true)\n      }\n    \n\n    return(\n        <div>\n           {loading && <CircularProgress variant=\"static\" value={progress} />}\n           <button onClick={start}>start</button>\n        </div>\n\n\n    )\n\n}\n\nexport default CurrentTraining;\n"]},"metadata":{},"sourceType":"module"}