{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/navigation/drawer/Drawer.js\";\nimport React, { useContext } from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport NavLinks from '../navLinks/NavLinks';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { AuthContext } from '../../auth/AuthContext';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  closeMenuButton: {\n    marginRight: 'auto',\n    marginLeft: 0\n  }\n}));\nexport default function PersistentDrawerLeft({\n  handleDrawerToggle,\n  open,\n  onLogOut\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    logOut\n  } = useContext(AuthContext);\n  const drawer = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLinks, {\n    onLogOut: onLogOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: classes.drawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: theme.direction === 'rtl' ? 'right' : 'left',\n    open: open,\n    onClose: handleDrawerToggle,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleDrawerToggle,\n    className: classes.closeMenuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), drawer)), /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), drawer))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/navigation/drawer/Drawer.js"],"names":["React","useContext","Hidden","IconButton","CloseIcon","Drawer","List","NavLinks","makeStyles","useTheme","AuthContext","drawerWidth","useStyles","theme","drawer","breakpoints","up","width","flexShrink","appBar","zIndex","menuButton","marginRight","spacing","display","toolbar","mixins","drawerPaper","content","flexGrow","padding","closeMenuButton","marginLeft","PersistentDrawerLeft","handleDrawerToggle","open","onLogOut","classes","logOut","direction","paper","keepMounted"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport NavLinks from '../navLinks/NavLinks';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { AuthContext } from '../../auth/AuthContext';\n\nconst drawerWidth = 240;const useStyles = makeStyles(theme => ({\n    \n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    closeMenuButton: {\n      marginRight: 'auto',\n      marginLeft: 0,\n    },\n  }));\n\n\nexport default function PersistentDrawerLeft({handleDrawerToggle, open, onLogOut}) {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const {logOut} = useContext(AuthContext)\n    \n\n  const drawer = (\n    <div>\n      <List>\n        <NavLinks onLogOut={onLogOut} />\n      </List>\n    </div>\n  );\n        \n    \n      return (\n          <div>\n        <nav className={classes.drawer}>\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={open}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            <IconButton onClick={handleDrawerToggle} className={classes.closeMenuButton}>\n              <CloseIcon/>\n            </IconButton>\n            {drawer}\n          </Drawer>\n        </Hidden><Hidden xsDown implementation=\"css\">\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.toolbar} />\n            {drawer}\n          </Drawer>  \n        </Hidden>\n      </nav>\n      <div className={classes.content}>\n        <div className={classes.toolbar} />\n      </div>\n    </div>\n  );\n}\n      \n  \n"]},"metadata":{},"sourceType":"module"}