{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-timer/Current-training-timer.js\";\nimport React, { useRef } from 'react';\nimport './Current-training-timer.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { exercises } from '../../../Exercises';\nimport CancelModal from '../../../cancelModel/CancelModel';\n\nconst CurrentTraining = ({\n  exercise\n}) => {\n  const [progress, setProgress] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const [openCancelModal, setOpenCancelModal] = React.useState(false);\n\n  const handleOpenCancelModal = () => {\n    console.log('tere');\n    setOpenCancelModal(true);\n  };\n\n  const handleCloseCancelModal = () => {\n    console.log('tere');\n    setOpenCancelModal(false);\n  };\n\n  const interval = useRef(0);\n\n  const CircularProgressWithLabel = props => {\n    return /*#__PURE__*/React.createElement(Box, {\n      position: \"relative\",\n      display: \"inline-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, Object.assign({\n      variant: \"static\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"div\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, `${Math.round(props.value)}%`)));\n  };\n\n  React.useEffect(() => {\n    let curEx = exercises.find(ex => ex.id === exercise);\n\n    if (curEx) {\n      let duration = curEx.duration / 100 * 1000;\n\n      if (loading) {\n        interval.current = setInterval(() => {\n          setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 1);\n        }, duration);\n\n        if (progress >= 100) {\n          setLoading(false);\n          clearInterval(interval.current);\n        }\n      }\n\n      return () => clearInterval(interval.current);\n    }\n  }, [loading, progress, exercise]);\n\n  const startTraining = () => {\n    setLoading(true);\n  };\n\n  const cancelTraining = () => {\n    clearInterval(interval.current);\n    setProgress(0);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, loading && /*#__PURE__*/React.createElement(CancelModal, {\n    open: openCancelModal,\n    cancelTraining: cancelTraining,\n    handleClose: handleCloseCancelModal,\n    handleOpen: handleOpenCancelModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgressWithLabel, {\n    size: \"12rem\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }\n  })), !loading ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: startTraining,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }, \"Start\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpenCancelModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 24\n    }\n  }, \"Cancel\")));\n};\n\nexport default CurrentTraining;","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-timer/Current-training-timer.js"],"names":["React","useRef","CircularProgress","Typography","Box","Button","exercises","CancelModal","CurrentTraining","exercise","progress","setProgress","useState","loading","setLoading","openCancelModal","setOpenCancelModal","handleOpenCancelModal","console","log","handleCloseCancelModal","interval","CircularProgressWithLabel","props","Math","round","value","useEffect","curEx","find","ex","id","duration","current","setInterval","prevProgress","clearInterval","startTraining","cancelTraining"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport './Current-training-timer.css'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { exercises } from '../../../Exercises';\nimport CancelModal from '../../../cancelModel/CancelModel';\n\n\nconst CurrentTraining = ({exercise}) => {\n\n    const [progress, setProgress] = React.useState(0);\n    const [loading, setLoading] = React.useState(false);\n    const [openCancelModal, setOpenCancelModal] = React.useState(false);\n\n    const handleOpenCancelModal = () => {\n      console.log('tere');\n      setOpenCancelModal(true);\n    };\n\n  const handleCloseCancelModal = () => {\n    console.log('tere');\n\n    setOpenCancelModal(false)\n  };\n\n    const interval = useRef(0);\n\n    const CircularProgressWithLabel = (props) => {\n        return (\n          <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"static\" {...props} />\n            <Box\n              top={0}\n              left={0}\n              bottom={0}\n              right={0}\n              position=\"absolute\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                props.value,\n              )}%`}</Typography>\n            </Box>\n          </Box>\n        );\n      }\n    React.useEffect(() => {\n      let curEx = exercises.find( ex => ex.id === exercise)\n      if(curEx){\n        let duration = curEx.duration / 100 * 1000;\n      \n          \n        if(loading) {\n            interval.current = setInterval(()=> {\n            setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 1))\n            \n        }, duration) \n        if (progress >= 100) {\n            setLoading(false)\n            clearInterval(interval.current);\n          }\n        }  \n        return () => clearInterval(interval.current) }\n      }, [loading, progress, exercise ]);\n\n\n      const startTraining = () => {\n          setLoading(true)\n      }\n\n      const cancelTraining = () => {\n        clearInterval(interval.current);\n        setProgress(0)\n        setLoading(false);\n      }\n\n    \n\n    return(\n      <React.Fragment>\n        { loading &&  <CancelModal\n           open={openCancelModal}\n           cancelTraining={cancelTraining}\n           handleClose={handleCloseCancelModal}\n           handleOpen={handleOpenCancelModal}\n        /> }\n        <div className=\"timer\">\n            <div>\n           {loading && <CircularProgressWithLabel  size=\"12rem\" value={progress} />}\n           </div>\n           {!loading ?<Button variant=\"contained\" color=\"primary\" onClick={startTraining}> \n            Start\n           </Button>:  <Button variant=\"contained\" color=\"primary\" onClick={handleOpenCancelModal}> \n            Cancel\n    </Button> }\n         \n        </div>\n\n\n      </React.Fragment>\n        \n\n    )\n\n}\n\nexport default CurrentTraining;\n"]},"metadata":{},"sourceType":"module"}