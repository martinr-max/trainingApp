{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-timer/Current-training-timer.js\";\nimport React from 'react';\nimport './Current-training-timer.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CancelModal from '../../../cancelModel/CancelModel';\n\nconst CurrentTrainingTimer = ({\n  exercise,\n  loading,\n  progress,\n  startTraining,\n  cancelTraining\n}) => {\n  const [openCancelModal, setOpenCancelModal] = React.useState(false);\n\n  const handleOpenCancelModal = () => {\n    setOpenCancelModal(true);\n  };\n\n  const handleCloseCancelModal = () => {\n    setOpenCancelModal(false);\n  };\n\n  const CircularProgressWithLabel = props => {\n    return /*#__PURE__*/React.createElement(Box, {\n      position: \"relative\",\n      display: \"inline-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, Object.assign({\n      variant: \"static\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"div\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, `${Math.round(props.value)}%`)));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, loading && /*#__PURE__*/React.createElement(CancelModal, {\n    open: openCancelModal,\n    cancelTraining: startTraining,\n    handleClose: handleCloseCancelModal,\n    handleOpen: handleOpenCancelModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgressWithLabel, {\n    size: \"12rem\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }\n  })), !loading ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disabled: exercise.length === 0,\n    color: \"primary\",\n    onClick: startTraining,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, \"Start\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleOpenCancelModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }\n  }, \"Cancel\")));\n};\n\nexport default CurrentTrainingTimer;","map":{"version":3,"sources":["/Users/martinraba/Desktop/training_app/src/training/current-training/current-training-timer/Current-training-timer.js"],"names":["React","CircularProgress","Typography","Box","Button","CancelModal","CurrentTrainingTimer","exercise","loading","progress","startTraining","cancelTraining","openCancelModal","setOpenCancelModal","useState","handleOpenCancelModal","handleCloseCancelModal","CircularProgressWithLabel","props","Math","round","value","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;;AAGA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA,aAA9B;AAA6CC,EAAAA;AAA7C,CAAD,KAAkE;AAG3F,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,KAAK,CAACc,QAAN,CAAe,KAAf,CAA9C;;AAEA,QAAMC,qBAAqB,GAAG,MAAM;AAClCF,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIF,QAAMG,sBAAsB,GAAG,MAAM;AAEnCH,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAHD;;AAOE,QAAMI,yBAAyB,GAAIC,KAAD,IAAW;AACzC,wBACE,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAC;AAA1B,OAAuCA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAEE,oBAAC,GAAD;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,MAAM,EAAE,CAHV;AAIE,MAAA,KAAK,EAAE,CAJT;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,OAAO,EAAC,MANV;AAOE,MAAA,UAAU,EAAC,QAPb;AAQE,MAAA,cAAc,EAAC,QARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,SAAS,EAAC,KAAxC;AAA8C,MAAA,KAAK,EAAC,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsE,GAAEC,IAAI,CAACC,KAAL,CACtEF,KAAK,CAACG,KADgE,CAEtE,GAFF,CAVF,CAFF,CADF;AAmBD,GApBH;;AAuBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIb,OAAO,iBAAK,oBAAC,WAAD;AACX,IAAA,IAAI,EAAEI,eADK;AAEX,IAAA,cAAc,EAAEF,aAFL;AAGX,IAAA,WAAW,EAAEM,sBAHF;AAIX,IAAA,UAAU,EAAED,qBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,eAOE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACAP,OAAO,iBAAI,oBAAC,yBAAD;AAA4B,IAAA,IAAI,EAAC,OAAjC;AAAyC,IAAA,KAAK,EAAEC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,CADJ,EAII,CAACD,OAAD,gBAAU,oBAAC,MAAD;AAAS,IAAA,OAAO,EAAC,WAAjB;AAA6B,IAAA,QAAQ,EAAED,QAAQ,CAACe,MAAT,KAAoB,CAA3D;AAA6D,IAAA,KAAK,EAAC,SAAnE;AAA6E,IAAA,OAAO,EAAEZ,aAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAV,gBAEW,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEK,qBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANf,CAPF,CADF;AAyBH,CAhED;;AAkEA,eAAeT,oBAAf","sourcesContent":["import React from 'react';\nimport './Current-training-timer.css'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CancelModal from '../../../cancelModel/CancelModel';\n\n\nconst CurrentTrainingTimer = ({exercise, loading, progress, startTraining, cancelTraining}) => {\n\n   \n    const [openCancelModal, setOpenCancelModal] = React.useState(false);\n\n    const handleOpenCancelModal = () => {\n      setOpenCancelModal(true);\n    };\n\n  const handleCloseCancelModal = () => {\n\n    setOpenCancelModal(false)\n  };\n\n \n\n    const CircularProgressWithLabel = (props) => {\n        return (\n          <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"static\" {...props} />\n            <Box\n              top={0}\n              left={0}\n              bottom={0}\n              right={0}\n              position=\"absolute\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                props.value,\n              )}%`}</Typography>\n            </Box>\n          </Box>\n        );\n      }\n  \n\n    return(\n      <React.Fragment>\n        { loading &&  <CancelModal\n           open={openCancelModal}\n           cancelTraining={startTraining}\n           handleClose={handleCloseCancelModal}\n           handleOpen={handleOpenCancelModal}\n        /> }\n        <div className=\"timer\">\n            <div>\n           {loading && <CircularProgressWithLabel  size=\"12rem\" value={progress} />}\n           </div>\n           {!loading ?<Button  variant=\"contained\" disabled={exercise.length === 0}color=\"primary\" onClick={startTraining}> \n            Start\n           </Button>:  <Button variant=\"contained\" color=\"primary\" onClick={handleOpenCancelModal}> \n            Cancel\n    </Button> }\n         \n        </div>\n\n      </React.Fragment>\n        \n\n    )\n\n}\n\nexport default CurrentTrainingTimer;\n"]},"metadata":{},"sourceType":"module"}